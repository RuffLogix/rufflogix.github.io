---
import type { Technology } from "../constants/techstack.constant";

export interface Props {
  technologies: Technology[];
  direction: "left" | "right";
  speed?: number;
}

const { technologies, direction, speed = 50 } = Astro.props;
---

<div class="marquee-container relative overflow-hidden py-6">
  <!-- Background Pattern -->
  <div
    class="absolute inset-0 bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 opacity-50"
  >
  </div>
  <div class="absolute inset-0 bg-grid-pattern opacity-20"></div>

  <div
    class={`marquee-content flex gap-6 relative z-10 ${direction === "left" ? "animate-marquee-left" : "animate-marquee-right"}`}
    style={`animation-duration: ${speed}s;`}
  >
    <!-- First set of technologies -->
    {
      technologies.map((tech) => (
        <div class="tech-item flex-shrink-0 bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 flex items-center gap-3 hover:border-emerald-500/50 transition-colors min-w-max">
          <span class="text-xl" role="img" aria-label={tech.name}>
            {tech.icon}
          </span>
          <h4 class="font-medium text-white text-sm whitespace-nowrap">
            {tech.name}
          </h4>
        </div>
      ))
    }
    <!-- Duplicate set for seamless loop -->
    {
      technologies.map((tech) => (
        <div class="tech-item flex-shrink-0 bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 flex items-center gap-3 hover:border-emerald-500/50 transition-colors min-w-max">
          <span class="text-xl" role="img" aria-label={tech.name}>
            {tech.icon}
          </span>
          <h4 class="font-medium text-white text-sm whitespace-nowrap">
            {tech.name}
          </h4>
        </div>
      ))
    }
  </div>
</div>

<style>
  .marquee-container {
    width: 100%;
    position: relative;
    overflow: hidden;
    border-radius: 12px;
    border: 1px solid rgba(75, 85, 99, 0.3);
    mask: linear-gradient(
      90deg,
      transparent,
      white 20%,
      white 80%,
      transparent
    );
    -webkit-mask: linear-gradient(
      90deg,
      transparent,
      white 20%,
      white 80%,
      transparent
    );
  }

  /* Grid background pattern */
  .bg-grid-pattern {
    background-image: linear-gradient(
        rgba(16, 185, 129, 0.1) 1px,
        transparent 1px
      ),
      linear-gradient(90deg, rgba(16, 185, 129, 0.1) 1px, transparent 1px);
    background-size: 20px 20px;
    animation: grid-move 20s linear infinite;
  }

  @keyframes grid-move {
    0% {
      background-position: 0 0;
    }
    100% {
      background-position: 20px 20px;
    }
  }

  .marquee-content {
    display: flex;
    width: max-content;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    animation-play-state: running;
    will-change: transform;
    transform: translateZ(0); /* Hardware acceleration */
  }

  @keyframes marquee-left {
    0% {
      transform: translateX(0) translateZ(0);
    }
    100% {
      transform: translateX(-50%) translateZ(0);
    }
  }

  @keyframes marquee-right {
    0% {
      transform: translateX(-50%) translateZ(0);
    }
    100% {
      transform: translateX(0) translateZ(0);
    }
  }

  .animate-marquee-left {
    animation-name: marquee-left;
    animation-play-state: running;
  }

  .animate-marquee-right {
    animation-name: marquee-right;
    animation-play-state: running;
  }

  /* Pause animation on hover for better UX */
  .marquee-container:hover .marquee-content {
    animation-play-state: paused;
  }

  /* Tech item styling */
  .tech-item {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    backdrop-filter: blur(10px);
    background: linear-gradient(
      135deg,
      rgba(31, 41, 55, 0.9),
      rgba(55, 65, 81, 0.8)
    );
    border: 1px solid rgba(75, 85, 99, 0.5);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    position: relative;
    overflow: hidden;
  }

  .tech-item::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(16, 185, 129, 0.1),
      transparent
    );
    transition: left 0.5s ease;
  }

  .tech-item:hover {
    transform: translateY(-3px) scale(1.02);
    box-shadow:
      0 12px 28px rgba(16, 185, 129, 0.15),
      0 4px 12px rgba(0, 0, 0, 0.2);
    border-color: rgba(16, 185, 129, 0.4);
    background: linear-gradient(
      135deg,
      rgba(31, 41, 55, 0.95),
      rgba(55, 65, 81, 0.9)
    );
  }

  .tech-item:hover::before {
    left: 100%;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .tech-item {
      min-width: 140px;
      padding: 0.5rem 0.75rem;
    }

    .marquee-container {
      mask: linear-gradient(
        90deg,
        transparent,
        white 10%,
        white 90%,
        transparent
      );
      -webkit-mask: linear-gradient(
        90deg,
        transparent,
        white 10%,
        white 90%,
        transparent
      );
    }
  }

  /* Ensure animations persist across page changes */
  .marquee-content {
    animation-fill-mode: both;
  }

  /* Pause animation on container hover, not just content */
  .marquee-container:hover .marquee-content,
  .marquee-container:focus-within .marquee-content {
    animation-play-state: paused;
  }

  /* Resume animation when not hovering */
  .marquee-container:not(:hover):not(:focus-within) .marquee-content {
    animation-play-state: running;
  }

  /* Reduce motion for accessibility */
  @media (prefers-reduced-motion: reduce) {
    .marquee-content {
      animation: none !important;
    }

    .bg-grid-pattern {
      animation: none !important;
    }

    .marquee-container {
      overflow-x: auto;
      scrollbar-width: thin;
      scrollbar-color: rgba(16, 185, 129, 0.3) transparent;
    }

    .marquee-container::-webkit-scrollbar {
      height: 4px;
    }

    .marquee-container::-webkit-scrollbar-track {
      background: transparent;
    }

    .marquee-container::-webkit-scrollbar-thumb {
      background: rgba(16, 185, 129, 0.3);
      border-radius: 2px;
    }
  }

  /* Performance optimizations */
  .marquee-content *,
  .bg-grid-pattern {
    backface-visibility: hidden;
    perspective: 1000px;
    transform: translateZ(0);
  }

  /* Better focus indicators for accessibility */
  .tech-item:focus {
    outline: 2px solid rgba(16, 185, 129, 0.6);
    outline-offset: 2px;
  }
</style>

<script>
  // Ensure marquee animation starts immediately
  document.addEventListener("DOMContentLoaded", () => {
    const marqueeContents = document.querySelectorAll(".marquee-content");
    marqueeContents.forEach((content) => {
      // Force animation to start
      if (content instanceof HTMLElement) {
        content.style.animationPlayState = "running";
      }
    });
  });

  // Handle visibility changes to maintain animations
  document.addEventListener("visibilitychange", () => {
    const marqueeContents = document.querySelectorAll(".marquee-content");
    if (document.visibilityState === "visible") {
      marqueeContents.forEach((content) => {
        if (content instanceof HTMLElement) {
          content.style.animationPlayState = "running";
        }
      });
    }
  });
</script>
